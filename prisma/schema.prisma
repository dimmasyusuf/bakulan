// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                  String  @id @default(auto()) @map("_id") @db.ObjectId
  user_id             String  @db.ObjectId
  type                String
  provider            String
  provider_account_id String
  refresh_token       String? @db.String
  access_token        String? @db.String
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.String
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
}

model Session {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  session_token String   @unique
  user_id       String   @db.ObjectId
  expires       DateTime
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  email_verified DateTime?
  image          String?
  password       String?
  role           Role      @default(USER)
  accounts       Account[]
  sessions       Session[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
